TODO:
-----

FINISHING REGISTRATION:
-----------------------


- remove Registree#correct? as well

- create an after_save callback on Registree that calls a method on the course to shift everything around
- where do validations like not_over_full? go?

TODO: inform teachers that force-adding a student -permenantly- increases the capacity of the section

- create a full lottery scaffold so the teacher can browse options?

- create a Ballot#to_registree method
  - refactor Lottery#commit to use this
- fully replace waitlist & roster with registree join tables
- implement waitlist logic

- Make sure the registrees email list (on semester) is built in a way that makes sense 

- Remove waitlist logic from event_group

- look into ActiveMailer and MailChimp
  - https://github.com/amro/gibbon
  - scheduled job gem?
  - http://guides.rubyonrails.org/action_mailer_basics.html
  - Need a StudentMailer and ParentMailer? Or just one?

-----------

- fix registration to allow several courses of the same grade
- refactor the common code in ballot/registree model into a concern

- also refactor common stuff in views and controllers between parent and teacher (especially in the ballot registree scaffolds)

- confirm before deleting a ballot or registree

- special event registration
- update Student#registered? to not just check ballots
- photos
- start & end dates

- include a student's class history in app/views/shared/_show.html.erb
- delete unused views (lots of teacher/**/index's, for instance)
- collapsify the lottery view to make it easier to use
- show accomodations on rollcall screen
- change "destroy" to delete
- check all delete endpoints
- re-test all rollcall stuff
- redirect namepace to sign-in

- ask where waiver confirmation should block the user

========================================

+ course and special event catalog for parents
  + gem "simple_calendar", "~> 2.0"

+ a helper/partial thing called "object table" or something that handles empty lists gracefully

=================================

+ thumbnail
+ reminders

----------
Requirements
----------

+ Unexpected students

+ swaps
+ Late registration

+ Fix all versions

----------
cleanup
----------

+ stub out email notifications when the list moves
  + How to schedule them before an event?
  + Send them WHENEVER something is rescheduled

+ Section/waitlist switching
  + teacher and student should both have the option
  + Add a link for force-adding a student

+ Thumbnails

----------
GENERAL
----------

+ Add special event registration to the parent pages

+ Show current semester automatically on the homepage

Contact

Courses + Events calendar view

View attendence record

----------
TEACHER
----------

Courses:
+ Transfer a student between sections (or to a different course?)

----------
PARENT
----------

Swap sections, if space is available

----------
BACKLOG
----------

+ Unauthenticated users hitting any path in the teacher or parent namespace should be redirected to a sign-in page

+ Read up on this "DEPRECATION WARNING: Time columns will become time zone aware in Rails 5.1. This
still causes `String`s to be parsed as if they were in `Time.zone`,"
and find out what it means for me

+ Merge the special_event and event models, using a scope (so that events have an end time)

+ Calendar pickers

Eventual:
+ See trends in student data

Allow teachers to register an "excused absence" *ahead* of time, and then have it automatically populate

+ Mark all required form fields (not capacity for special events, for instance)
+ Create corresponding validations

+ mailchimp integration
