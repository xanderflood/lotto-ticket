TODO:
-----




TEACHER/PARENT SCAFFOLD:
  - SHOULD I REFACTOR IT FROM PARENT/PROFILE?

  OR
  --

  - create a "parent" scaffold that actually displays ParentProfiles. Refactor the singleton scaffold to be shared, though:
    Is there anything in there that teachers shouldn't be able to edit?
    Doesn't appear so, so:
      - move the form into a shared folder and point them both to it
      - refactor it to use a "role" local
      - duplicate it into a "show" view
      - duplicate the teacher/students index-and-search setup
    Create a teacher/parents/students scaffolds and
      - refactor the index into a shared folder
      - link the parents and students together (in both directions)

  - Refactor both views before installing anything related to the teacher-side scaffold
  - then `rails g scaffold_controller teacher/parent --model-name=parent --no-helper`










FINISHING REGISTRATION:
-----------------------

SEMESTER STATE MACHINE:
- rewrite all code that referenced current, lottery_open, and registration_open

- remove Registree#correct? as well

- create an after_save callback on Registree that calls a method on the course to shift everything around
- where do validations like not_over_full? go?

TODO: inform teachers that force-adding a student -permenantly- increases the capacity of the section

- look into ActiveMailer and MailChimp
  - https://github.com/amro/gibbon
  - scheduled job gem?
  - http://guides.rubyonrails.org/action_mailer_basics.html
  - Need a StudentMailer and ParentMailer? Or just one?

  + How to schedule them before an event?
  + Send them WHENEVER something is rescheduled
  https://github.com/collectiveidea/delayed_job

- put student names all over

- Deal with the double notices

-----------

- confirm before deleting a ballot or registree

- special event registration
- update Student#registered? to not just check ballots
- photos

- include a student's class history in app/views/shared/_show.html.erb
- delete unused views (lots of teacher/**/index's, for instance)

- show accomodations on rollcall screen
- change "destroy" to delete
- check all delete endpoints
- re-test all rollcall stuff

+ course and special event catalog for parents
  + gem "simple_calendar", "~> 2.0"

+ Unexpected students

+ Fix all versions

View attendence record

+ Mark all required form fields (not capacity for special events, for instance)

----------
BACKLOG
----------

+ Contact?

+ Show current semester automatically on the homepage

+ Read up on this "DEPRECATION WARNING: Time columns will become time zone aware in Rails 5.1. This
still causes `String`s to be parsed as if they were in `Time.zone`,"
and find out what it means for me

Eventual:
+ See trends in student data

- fix registration to allow several courses of the same grade

- rework the lottery into separate atomic transactions, one per student. if it fails part-way through, this is actually not a big deal, you can just pick up where it left off

- create a full lottery scaffold so the teacher can browse options?

- use the bootstrap card class all over

- refactor the common code in ballot/registree model into a concern
- also refactor common stuff in views and controllers between parent and teacher (especially in the ballot registree scaffolds)

+ a helper/partial thing called "object table" or something that handles empty lists gracefully
- collapsify the lottery view to make it easier to use

- semester start & end dates
