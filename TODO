#-----------------#
# BUG FIXES/TESTS #
#-----------------#

+ Mark all required form fields (not capacity for special events, for instance)

!!!!!!!
Dangerous ops and warnings:
- destroy registree if a student changes their level, but ONLY do it if the Semester is current, so we don't lose the old info
- inform teachers that force-adding a student -permenantly- increases the capacity of the section
!!!!!!!

- inform teachers that force-adding a student -permenantly- increases the capacity of the section

- If the lottery save fails because not all students have a level, it needs a more descriptive error message than "invalid state transition."

+ write elaborate case specs for views/shared/students/table/_header and _row

+ Change all fictures to factories, and see if that fixed the issues with event_group_spec

- write specs for waitlist logic
- write a spec to ensure that new waitlist registrees are added to the BACK of the list

+ Add delete specs for all models with associations

- write a spec for when you move a student FROM A FULL SECTION to the waitlist for that courses. They should not be able to "prefer" the section they're already in, because it won't be full starting in a moment

- Better tracking of "Back" link, or else clearer naming

- make sure EventGroup#waitlist is implemented efficiently

#--------------#
# IMPROVEMENTS #
#--------------#

- Add the waitlist into teacher views, and waitlist position into parent views

- Add in more CSV exports (parents, students, with class history?)
Add:
  - Semester attendance
    use Rails's Date#beginning_of_week to group these
  - Parents index
  - Students index (with history and attendance)
  - Parents/students index by semester

- rework the lottery into separate atomic transactions, one per student. if it fails part-way through, this is actually not a big deal, you can just pick up where it left off
  - also then make sure that generating and running a new lottery will be idempotent (i.e. only generate/apply placements for unplaced students)

- use the bootstrap card class all over, esp lottery pages
- collapsify the lottery view to make it easier to use

#-------------#
# REFACTORING #
#-------------#

- confirm before deleting a ballot (already covered for registree)

- Set maximum column sizes so the tables stay regular

+ Fix empty tables (on the rollcall form, for instance)

- as mentioned HERE:
  http://guides.rubyonrails.org/routing.html#adding-more-restful-actions
  you can get around the params[:ballot_id] vs params[:id] by explicitly marking the routes as member routes

#----------#
# FEATURES #
#----------#

- Show current semester automatically on the homepage

- See trends in student data

- create a full lottery scaffold so the teacher can browse options?

- look into ActiveMailer and MailChimp
  - https://github.com/amro/gibbon
  - scheduled job gem?
  - http://guides.rubyonrails.org/action_mailer_basics.html
  + Send them WHENEVER something is rescheduled

- photos/thumbnails

+ course and special event catalog for parents
  + gem "simple_calendar", "~> 2.0"
