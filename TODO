TODO:
-----


=============
THIS IS THE SHIT THAT NEEDS TO BE DONE TODAY
=============

A signed-in teacher who hits a nonexistent teacher route gets sent to the sign-in page. handle this neatly with a 404 instead

Check all the error blocks in forms to make sure the model names don't have underscores.

- grep for TODOs

- go over specs
  - clean up specs?

- write specs for waitlist logic
- test it manually too

- make sure that EventGroup#waitlist.first is what it should be
  (i.e. make sure that new waitlisters are added to the end)
  (write a spec too)

- make sure EventGroup#waitlist is implemented efficiently

=============
THIS IS THE SHIT THAT NEEDS TO BE DONE TODAY
=============
















-----------------------

Change the stuff to require a waiver to be submitted before registration (if the student was force-created by a teacher, for instance)

- If the lottery save fails because not all students have a level, it needs a more descriptive error message than "invalid state transition."

- Better tracking of "Back" link, or else clearer naming

- Bring back 'current' and make it a separate thing from semester state so that teachers can work freely on old semesters

TODO: inform teachers that force-adding a student -permenantly- increases the capacity of the section

- look into ActiveMailer and MailChimp
  - https://github.com/amro/gibbon
  - scheduled job gem?
  - http://guides.rubyonrails.org/action_mailer_basics.html
  - Need a StudentMailer and ParentMailer? Or just one?

  + How to schedule them before an event?
  + Send them WHENEVER something is rescheduled
  https://github.com/collectiveidea/delayed_job

- put student names all over

- Deal with the double notices

-----------

+!+!+!+!+!+ refactor the index/search views to use a common row partial, to avoid duplication of this VERY important code

+ factor out a "_register_link" partial that contains all the semester case logic, and put it on the student show page as well as the indexes
  + factor out the user role while your at it


Set maximum column sizes so the tables stay regular

- confirm before deleting a ballot or registree

- special event registration
- update Student#registered? to not just check ballots
- photos

- include a student's class history in app/views/shared/_show.html.erb
- delete unused views (lots of teacher/**/index's, for instance)

- show accomodations on rollcall screen
- change "destroy" to delete
- check all delete endpoints
- re-test all rollcall stuff

+ course and special event catalog for parents
  + gem "simple_calendar", "~> 2.0"

+ Unexpected students

+ Fix all versions

View attendence record

+ Mark all required form fields (not capacity for special events, for instance)

----------
BACKLOG
----------

+ Contact?

+ Show current semester automatically on the homepage

+ Read up on this "DEPRECATION WARNING: Time columns will become time zone aware in Rails 5.1. This
still causes `String`s to be parsed as if they were in `Time.zone`,"
and find out what it means for me

Eventual:
+ See trends in student data

- fix registration to allow several courses of the same grade

- rework the lottery into separate atomic transactions, one per student. if it fails part-way through, this is actually not a big deal, you can just pick up where it left off

- create a full lottery scaffold so the teacher can browse options?

- use the bootstrap card class all over

- refactor the common code in ballot/registree model into a concern
- also refactor common stuff in views and controllers between parent and teacher (especially in the ballot registree scaffolds)

+ a helper/partial thing called "object table" or something that handles empty lists gracefully
- collapsify the lottery view to make it easier to use

- semester start & end dates

- as mentioned HERE:
  http://guides.rubyonrails.org/routing.html#adding-more-restful-actions
  you can get around the params[:ballot_id] vs params[:id] by explicitly marking the routes as member routes
